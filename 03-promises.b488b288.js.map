{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EAEFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAdAQ,SAASC,cAAc,SAkB/BC,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBAEN,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SAEpD,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOI,MAAOD,IAAK,CACrC,IAAIE,EAAWF,EAAI,EACnB,MAAMG,EAAYC,OAAOT,EAAMM,OAASL,EAAKK,MAAQD,EAErDpB,EAAcsB,EAAUC,GACrBE,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqB3B,QAAiBC,MAAU,IAGnD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoB7B,QAAiBC,MAAU,G,CAIvDW,EAAMK,cAAca,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n\n  for (let i = 0; i < amount.value; i++) {\n    let position = i + 1;\n    const delayStep = Number(delay.value) + step.value * i;\n\n    createPromise(position, delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  event.currentTarget.reset();\n}\n// const inputD = document.querySelector(\"input[name='delay']\");\n// const inputS = document.querySelector(\"input[name='step']\");\n// const inputA = document.querySelector(\"input[name='amount']\");\n\n// function submitForm(event) {\n//   event.preventDefault();\n//   for (let i = 0; i < inputA.value; i++) {\n//     let position = i + 1;\n//     let delayStep = 'inputD.value + inputS.value * i';\n//     console.log(delayStep);\n//     createPromise(position, delayStep)\n//       .then(({ position, delay }) => {\n//         Notiflix.Notify.success(\n//           `✅ Fulfilled promise ${position} in ${delay}ms`\n//         );\n//       })\n//       .catch(({ position, delay }) => {\n//         Notiflix.Notify.failure(\n//           `❌ Rejected promise ${position} in ${delay}ms`\n//         );\n//       });\n//   }\n//   event.currentTarget.reset();\n// }\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","i","value","position1","delayStep","Number","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.b488b288.js.map"}